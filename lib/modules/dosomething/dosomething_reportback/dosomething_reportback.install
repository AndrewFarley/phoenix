<?php
/**
 * @file
 * Installation and schema hooks for dosomething_reportback.module.
 */

/**
 * Implements hook_schema().
 */
function dosomething_reportback_schema() {
  $schema = array();
  $schema['dosomething_reportback'] = array(
    'description' => 'Table of user reportbacks.',
    'fields' => array(
      'rbid' => array(
        'description' => 'Primary key.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid that reported back.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => 'The {node}.nid that the user has reported back for.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the reportback was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the reportback was last updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'quantity' => array(
        'description' => 'The quantity of reportback_nouns reportback_verbed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'why_participated' => array(
        'description' => 'Why the user participated.',
        'type' => 'text',
        'length' => '2048',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('rbid'),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );
  $schema['dosomething_reportback_log'] = array(
    'description' => 'Table of reportback update activity.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of log table.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'rbid' => array(
        'description' => 'Reportback rbid updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The {users}.uid that updated.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'op' => array(
        'description' => 'Operation performed on the reportback.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'timestamp' => array(
        'description' => 'The Unix timestamp of the update.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'quantity' => array(
        'description' => 'The quantity of reportback_nouns reportback_verbed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'why_participated' => array(
        'description' => 'Why the user participated.',
        'type' => 'text',
        'length' => '2048',
        'not null' => FALSE,
      ),
      'files' => array(
        'description' => 'Comma separated list of file fids attached to reportback.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'num_files' => array(
        'description' => 'The number of files attached to reportback.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'remote_addr' => array(
        'description' => 'The IP address of the user that submitted the form.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );
  $schema['dosomething_reportback_file'] = array(
    'fields' => array(
      'rbid' => array(
        'description' => 'Reportback rbid',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'fid' => array(
        'description' => 'File fid',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'remote_addr' => array(
        'description' => 'The IP address of the user that submitted the file.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('rbid', 'fid'),
  );
  return $schema;
}

/**
 * Drops field_image_user_reportback, adds dosomething_reportback_file table.
 */
function dosomething_reportback_update_7001(&$sandbox) {
  field_delete_field('field_image_user_reportback');
  $table_name = 'dosomething_reportback_file';
  $schema = dosomething_reportback_schema();
  db_create_table($table_name, $schema[$table_name]);
}

/**
 * Adds remote_addr field to reportback file and log tables.
 */
function dosomething_reportback_update_7002() {
  $field_name = 'remote_addr';
  // Tables to add remote_addr to.
  $tables = array('dosomething_reportback_log', 'dosomething_reportback_file');
  // Load schema for field definitions.
  $schema = dosomething_reportback_schema();
  foreach ($tables as $tbl_name) {
    // If the field doesn't exist already:
    if (!db_field_exists($tbl_name, $field_name)) {
      // Add it per the schema field definition.
      db_add_field($tbl_name, $field_name, $schema[$tbl_name]['fields'][$field_name]);
    }
  }
}

/**
 * Updates log records where uid==0 due to bug in $reportback->insertLog().
 */
function dosomething_reportback_update_7003() {
  // Update records with uid==0 to the uid value stored on the reportback.
  $sql = 'UPDATE dosomething_reportback_log log
    INNER JOIN dosomething_reportback rb ON (rb.rbid = log.rbid)
    SET log.uid = rb.uid
    WHERE log.uid = 0;';
  db_query($sql);
}
