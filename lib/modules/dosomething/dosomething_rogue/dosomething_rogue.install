<?php
/**
 * @file
 * Installation and schema hooks for dosomething_rogue.module
 */

/**
 * Implements hook_schema().
 */
function dosomething_rogue_schema() {
  $schema = [];

  $schema['dosomething_rogue_reportbacks'] = [
    'description' => 'Table for tracking phoenix rbid and fids and their corresponding rogue reportback and item ids',
    'fields' => [
      'fid' => [
        'description' => 'The fid of the reportback item as it is stored in phoenix.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'rogue_item_id' => [
        'description' => 'The fid of the reportback item as it is stored in phoenix.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'rbid' => [
        'description' => 'The rbid as it is stored in phoenix.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'rogue_reportback_id' => [
        'description' => 'The id of the same reportback in rogue.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'created_at' => [
        'description' => 'The Unix timestamp of when the reportback was stored',
        'type' => 'int',
        'not null' => FALSE,
      ],
    ],
    'primary key' => ['fid'],
    'indexes' => [
      'rbid' => ['rbid'],
      'rogue_reportback_id' => ['rogue_reportback_id'],
      'rogue_item_id' => ['rogue_item_id'],
    ],
  ];

  $schema['dosomething_rogue_failed_task_log'] = [
    'description' => 'Table of failed requests sending reportbacks from Phoenix to Rogue',
    'fields' => [
      'id' => [
        'description' => 'Primary key of log table.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'drupal_id' => [
        'description' => 'The drupal_id of the user.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'campaign_id' => [
        'description' => 'Campaign nid for the reportback.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'campaign_run_id' => [
        'description' => 'Campaign run nid for the reportback.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'quantity' => [
        'description' => 'The quantity of reportback_nouns reportback_verbed.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'why_participated' => [
        'description' => 'Why the user participated in the campaign.',
        'type' => 'text',
        'length' => '2048',
        'not null' => TRUE,
      ],
      'file' => [
        'description' => 'The file string to save of the reportback image.',
        'type' => 'text',
        'length' => '500000',
        'not null' => FALSE,
      ],
      'caption' => [
        'description' => 'File caption.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ],
      'timestamp' => [
        'description' => 'The Unix timestamp of the request.',
        'type' => 'int',
        'not null' => TRUE,
      ],
      'response_code' => [
        'description' => 'The HTTP response code from Rogue.',
        'type' => 'int',
      ],
      'response_values' => [
        'description' => 'The JSON response from Rogue.',
        'type' => 'text',
        'length' => '500000',
        'not null' => FALSE,
      ],
    ],
    'primary key' => ['id'],
  ];

  return $schema;
}

/**
 * Create rogue reportback table.
 */
function dosomething_rogue_update_7001(&$sandbox) {
  $table_name = 'dosomething_rogue_reportbacks';
  if (!db_table_exists($table_name)) {
    $schema = dosomething_rogue_schema();
    db_create_table($table_name, $schema[$table_name]);
  }
}

/**
 * Create dosomething_rogue_failed_task_log table.
 */
function dosomething_rogue_update_7002(&$sandbox) {
  $table_name = 'dosomething_rogue_failed_task_log';
  if (!db_table_exists($table_name)) {
    $schema = dosomething_rogue_schema();
    db_create_table($table_name, $schema[$table_name]);
  }
}
