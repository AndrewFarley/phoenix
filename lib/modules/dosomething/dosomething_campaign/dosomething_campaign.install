<?php
/**
 * @file
 * Installation and schema hooks for dosomething_campaign.module.
 */

function dosomething_campaign_schema() {
  $schema['cache_dosomething_campaign'] = drupal_get_schema_unprocessed('system', 'cache');

  $schema['dosomething_campaign_affiliate_opt_ins'] = [
    'description' => 'Table of affiliate messaging opt-ins.',
    'fields' => [
      'id' => [
        'description' => 'Primary key.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ],
      'campaign_id' => [
        'description' => 'The campaign ID containing the affiliate opt-in.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'campaign_run_id' => [
        'description' => 'The campaign run ID containing the affiliate opt-in.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'northstar_id' => [
        'description' => 'The Northstar ID for the user that opted-in.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ],
      'first_name' => [
        'description' => 'The first name for the user that opted-in.',
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => '255',
      ],
      'email' => [
        'description' => 'The email for the user that opted-in.',
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => '255',
      ],
      'mobile' => [
        'description' => 'The mobile number for the user that opted-in.',
        'type' => 'varchar',
        'not null' => FALSE,
        'length' => '255',
      ],
    ],
    'primary key' => ['id'],
    'indexes' => [
      'campaign_id' => ['campaign_id'],
      'campaign_run_id' => ['campaign_run_id'],
      'northstar_id' => ['northstar_id'],
    ]
  ];

  return $schema;
}

/**
 * Deletes field_psa.
 */
function dosomething_campaign_update_7001(&$sandbox) {
  field_delete_field('field_psa');
}

/**
 * Sets new variable value.
 */
function dosomething_campaign_update_7002(&$sandbox) {
  $copy = "Join 250,000 people who have played since 2012!";
  variable_set('dosomething_campaign_sms_game_all_participants_copy', $copy);
}

/**
 * Sets Closed Callout variable.
 */
function dosomething_campaign_update_7003(&$sandbox) {
  $copy = "We'll hit you up when it re-opens";
  variable_set('dosomething_campaign_presignup_callout_copy', $copy);
}

/**
 * Sets lots more variables.
 */
function dosomething_campaign_update_7004(&$sandbox) {
  $value = "You did it!";
  variable_set('dosomething_campaign_confirmation_page_title', $value);
  $value = "Thanks for sharing!";
  variable_set('dosomething_campaign_sms_game_confirmation_page_title', $value);
  $value = "Find more campaigns";
  variable_set('dosomething_campaign_confirmation_page_button_text', $value);
  $value = "Join us";
  variable_set('dosomething_campaign_confirmation_page_anon_button_text', $value);
  $value = "Create an account to keep track of your campaigns!";
  variable_set('dosomething_campaign_confirmation_page_anon_cta_text', $value);
}

/**
 * Deletes the field_variables field collection and related fields.
 *
 * See https://github.com/DoSomething/phoenix/issues/2726.
 */
function dosomething_campaign_update_7005(&$sandbox) {
  field_delete_field('field_variable_name');
  field_delete_field('field_variable_value');
  field_delete_field('field_variables');
}

/**
 * Updates field_post_step_copy and field_solution_support values to markdown.
 */
function dosomething_campaign_update_7006() {
  $format = 'markdown';

  // Find all campaigns.
  $query = db_select('node', 'n');
  $query->addField('n', 'nid');
  $query->condition('type', 'campaign');
  $result = $query->execute();

  // Foreach campaign:
  foreach ($result as $record) {
    $nid = $record->nid;
    $args = array(
      '%nid' => $nid,
      '@format' => $format,
    );
    $node = node_load($nid);
    $updated = FALSE;
    if (isset($node->field_post_step_copy[LANGUAGE_NONE])) {
      $node->field_post_step_copy[LANGUAGE_NONE][0]['format'] = $format;
      $updated = TRUE;
      $msg = 'Nid %nid field_post_step_copy updated to @format.';
      watchdog('dosomething_campaign', $msg, $args);
    }
    if (isset($node->field_solution_support[LANGUAGE_NONE])) {
      $node->field_solution_support[LANGUAGE_NONE][0]['format'] = $format;
      $updated = TRUE;
      $msg = 'Nid %nid field_post_step_copy updated to @format.';
      watchdog('dosomething_campaign', $msg, $args);
    }
    if ($updated) {
      node_save($node);
    }
  }
}

/**
 * Deletes field_image_reportback_gallery.
 */
function dosomething_campaign_update_7007(&$sandbox) {
  field_delete_field('field_image_reportback_gallery');
}

function dosomething_campaign_update_7008(&$sandbox) {
  variable_del('dosomething_campaign_permalink_confirmation_owners_social_header');
  variable_del('dosomething_campaign_permalink_confirmation_owners_social_copy');
}

/**
 * Update campaign status on campaigns with no status.
 * The field_campaign_status is not set on most campaigns, this fixes that.
 */
function dosomething_campaign_update_7009(&$sandbox) {
  // Find all campaigns where there is no status.
  $results = db_query("SELECT n.nid, n.title, s.field_campaign_status_value
                       FROM node n
                       LEFT JOIN field_data_field_campaign_status s on s.entity_id = n.nid
                       WHERE n.type = 'campaign'
                       AND s.field_campaign_status_value is null");

  // For each one, set the value to active, then save the node.
  foreach($results as $result) {
    $node = node_load($result->nid);
    $node->field_campaign_status[LANGUAGE_NONE][0]['value'] = 'active';
    node_save($node);
  }

}

function dosomething_campaign_update_7010(&$sandbox) {
  variable_del('dosomething_campaign_enable_hot_module');
}

function dosomething_campaign_update_7011(&$sandbox) {
  variable_del('dosomething_campaign_win_background_image');
}

function dosomething_campaign_update_7012() {
  if (!db_table_exists('cache_dosomething_campaign')) {
    $schema['cache_dosomething_campaign'] = drupal_get_schema_unprocessed('system', 'cache');
    db_create_table('cache_dosomething_campaign', $schema['cache_dosomething_campaign']);
  }
}

/**
 * Remove mobile app fields, apparently features can't handle it.
 * Refs #6239
 */
function dosomething_campaign_update_7013() {
  field_delete_field('field_mobile_app_date');
  field_delete_field('field_on_mobile_app');
}

/**
 * Add new dosomething_campaign_affiliate_opt_ins table.
 */
function dosomething_campaign_update_7014() {
  $table_name = 'dosomething_campaign_affiliate_opt_ins';

  if (!db_table_exists($table_name)) {
    $schema = dosomething_campaign_schema();

    db_create_table($table_name, $schema[$table_name]);
  }
}
