<?php
/**
 * @file
 * Code for the DoSomething Metatag feature.
 */

/**
 * Implements hook_preprocess_page().
 */
function dosomething_metatag_preprocess_page(&$vars) {
  global $user;

  if (!empty($_GET['pass-reset-token'])) {
    // Do not cache pages with reset token set.
    $robots_meta_tag = array(
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'robots',
        'content' => 'noindex,nofollow',
      )
    );
    $no_refer_meta_tag = [
      '#tag' => 'meta',
      '#attributes' => [
        'name' => 'referrer',
        'content' => 'no-referrer',
      ]
    ];
    drupal_add_html_head($robots_meta_tag, 'robots_meta_tag');
    drupal_add_html_head($no_refer_meta_tag, 'no_refer_meta_tag');
  } else {
    // Prevent search engines from using DMOZ site descriptions.
    $dmoz_meta_tag = array(
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'robots',
        'content' => 'NOODP'
      )
    );
    drupal_add_html_head($dmoz_meta_tag, 'dmoz_meta_tag');
  }

  // Verifies DS Pinterest account.
  $pinterest_verify_tag = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(
      'name' => 'p:domain_verify',
      'content' => '14e81c42e6c4ff0ca4ec7be173a4799f'
    )
  );
  drupal_add_html_head($pinterest_verify_tag, 'pinterest_verify_tag');
  $node = NULL;
  // Is this a node page?
  if (!empty($vars['node'])) {
    $node = $vars['node'];
  }
  // Add relevant image metatags.
  dosomething_metatag_add_metatag_image($node);

  // Add explicit facebook og meta tags to campaign pages.
  if (isset($node) && $node->type == 'campaign') {
    $langauge_code = dosomething_global_get_language($user, $node);

    $facebook_data = array(
      'type' => 'dosomething_facebook:campaign',
      'url' => url(current_path(), array('absolute'=> TRUE)),
      'title' => $node->title,
      'description' => "Volunteer and take action! " . $node->field_call_to_action[$langauge_code][0]['value'],
    );
    dosomething_metatag_add_facebook_tags($facebook_data);
  }

  // Add special share info to the permalink page.
  if (in_array('page__reportback', $vars['theme_hook_suggestions'])) {
    dosomething_metatag_get_permalink_vars();
  }
}

/**
 * Determines and sets metatag img_src metatag for a given $node and $view_mode.
 */
function dosomething_metatag_get_metatag_image($node = NULL) {
  $language = dosomething_global_convert_country_to_language(dosomething_global_get_current_prefix());
  // Initialize as site logo as default.
  $image =  theme_get_setting('logo');
  // If no node is present, return default.
  if ($node == NULL) {
    return $image;
  }
  // List of node types which use an Image EntityReference for image metatag.
  $metatag_image_node_types = array(
    'campaign' => 'field_image_campaign_cover',
    'fact_page' => 'field_intro_image',
  );
  // Foreach type that needs Image EntityReference for image metatag:
  foreach ($metatag_image_node_types as $type => $field) {
    // If this node matches the type and a field value exists:
    if ($type == $node->type && !empty($node->{$field})) {
      // Get the image node nid.
      $image_nid = dosomething_helpers_extract_field_data($node->field_image_campaign_cover, $language);
      // Get the image URL.
      if (module_exists('dosomething_image')) {
        return dosomething_image_get_themed_image_url($image_nid, 'landscape', '740x480');
      }
    }
  }
  return $image;
}

/**
 * Sets the img_src metatag with a given $node's Image EntityReference $field.
 */
function dosomething_metatag_add_metatag_image($node = NULL) {
  $image = dosomething_metatag_get_metatag_image($node);

  if ($image) {
    // Add social sharing thumbnail meta tag,
    // <link rel="image_src" href="[image]"> into the HEAD.
    $attributes = array(
      'href' => $image,
      'rel' => 'image_src',
    );
    drupal_add_html_head_link($attributes, TRUE);
    // Add the kik icon meta tag,
    // <link  rel="kik-icon" href="[image]"> into the HEAD
    $attributes_kik = array(
      'href' => $image,
      'rel' => 'kik-icon',
    );
    drupal_add_html_head_link($attributes_kik, TRUE);
    // Add the Facebook Open Graph tag into the HEAD.
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "og:image",
        "content" => $image,
      ),
    );
    drupal_add_html_head($element, 'og:image');

    // Facebook best practices say to add width & height tags
    // 740x480 is the crop we are using on the images.
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "og:image:width",
        "content" =>  740,
      ),
    );
    drupal_add_html_head($element, 'og:image:width');

    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "og:image:height",
        "content" =>  480,
      ),
    );
    drupal_add_html_head($element, 'og:image:height');

    // Add the Twitter Image tag into the HEAD.
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "twitter:image",
        "content" => $image,
      ),
    );
    drupal_add_html_head($element, 'twitter:image');
  }
}

/**
 * Adds twitter, facebook, tumblr share meta tags to permalink page.
 */
function dosomething_metatag_get_permalink_vars() {
  $rbid = arg(1);
  $fid = ($_GET['fid']);
  $rb_entity = reportback_load($rbid);
  if (!$fid) {
    $fid = array_pop($rb_entity->getFids());
  }
  $file = reportback_file_load($fid);
  $image = $file->getImageURL('480x480');
  $node = dosomething_campaign_load(node_load($rb_entity->nid));
  $share_copy = $node->call_to_action;
  $share_url = url(current_path(), array('absolute' => TRUE, 'query' => array('fid' => $fid)));

  // Twitter.
  $element = array(
    '#tag' => 'meta',
    '#attributes' => array(
      "property" => "twitter:card",
      "content" => 'photo',
    ),
  );
  drupal_add_html_head($element, 'twitter:card');

  $element = array(
    '#tag' => 'meta',
    '#attributes' => array(
      "property" => "twitter:site",
      "content" => '@dosomething',
    ),
  );
  drupal_add_html_head($element, 'twitter:site');

  $element = array(
    '#tag' => 'meta',
    '#attributes' => array(
      "property" => "twitter:image:src",
      "content" => $image,
    ),
  );
  drupal_add_html_head($element, 'twitter:image:src');

  $element = array(
    '#tag' => 'meta',
    '#attributes' => array(
      "property" => "twitter:title",
      "content" => $node->title,
    ),
  );
  drupal_add_html_head($element, 'twitter:title');

  $element = array(
    '#tag' => 'meta',
    '#attributes' => array(
      "property" => "twitter:url",
      "content" => $share_url,
    ),
  );
  drupal_add_html_head($element, 'twitter:url');

  // Facebook.
  $facebook_data = array(
    'type' => 'dosomething_facebook:campaign',
    'url' => $share_url,
    'title' => $node->title,
    'description' => $share_copy,
    'image' => $image,
    // 480x480 is the crop we are using on the images.
    'width' => 480,
    'height' => 480,
  );

  dosomething_metatag_add_facebook_tags($facebook_data);
}

/*
 * Add facebook og tags to the page.
 *
 * @param array $data
 *   Array of the content to use for each property.
 */
function dosomething_metatag_add_facebook_tags($data) {
  $element = array(
    '#tag' => 'meta',
    '#attributes' => array(
      "property" => "fb:app_id",
      "content" => variable_get('dosomething_settings_facebook_app_id', ''),
    ),
  );

  drupal_add_html_head($element, 'fb:app_id');

  if (array_key_exists('type', $data)) {
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "og:type",
        "content" => $data['type'],
      ),
    );

    drupal_add_html_head($element, 'og:type');
  }

  if (array_key_exists('url', $data)) {
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "og:url",
        "content" => $data['url'],
      ),
    );

    drupal_add_html_head($element, 'og:url');
  }

  if (array_key_exists('title', $data)) {
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "og:title",
        "content" => $data['title'],
      ),
    );

    drupal_add_html_head($element, 'og:title');
  }

  if (array_key_exists('description', $data)) {
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "og:description",
        "content" => $data['description'],
      )
    );

    drupal_add_html_head($element, 'og:description');
  }

  if (array_key_exists('image', $data)) {
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "og:image",
        "content" => $data['image'],
      )
    );

    drupal_add_html_head($element, 'og:image');
  }

  if (array_key_exists('width', $data)) {
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "og:image:width",
        "content" =>  $data['width'],
      ),
    );
    drupal_add_html_head($element, 'og:image:width');
  }

  if (array_key_exists('height', $data)) {
    $element = array(
      '#tag' => 'meta',
      '#attributes' => array(
        "property" => "og:image:height",
        "content" =>  $data['height'],
      ),
    );
    drupal_add_html_head($element, 'og:image:height');
  }
}

/*
 * Add twitter meta tags to the page.
 *
 * @param array $data
 *   Array of the content to use for each property.
 */
function dosomething_metatag_add_twitter_tags($data) {
  $card = [
    '#tag' => 'meta',
    '#attributes' => [
      'property' => 'twitter:card',
      'content' => 'summary_large_image',
    ],
  ];
  drupal_add_html_head($card, 'twitter:card');

  $site = [
    '#tag' => 'meta',
    '#attributes' => [
      'property' => 'twitter:site',
      'content' => '@dosomething',
    ],
  ];
  drupal_add_html_head($site, 'twitter:site');

  $creator = [
    '#tag' => 'meta',
    '#attributes' => [
      'property' => 'twitter:creator',
      'content' => '@dosomething',
    ],
  ];
  drupal_add_html_head($creator, 'twitter:creator');

  $title = [
    '#tag' => 'meta',
    '#attributes' => [
      'property' => 'twitter:title',
      'content' => $data['title'],
    ],
  ];
  drupal_add_html_head($title, 'twitter:title');

  $description = [
    '#tag' => 'meta',
    '#attributes' => [
      'property' => 'twitter:description',
      'content' => $data['description'],
    ],
  ];
  drupal_add_html_head($description, 'twitter:description');

  $description = [
    '#tag' => 'meta',
    '#attributes' => [
      'property' => 'twitter:image',
      'content' => $data['image'],
    ],
  ];
  drupal_add_html_head($image, 'twitter:image');
}
