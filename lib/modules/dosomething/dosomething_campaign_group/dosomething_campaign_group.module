<?php
/**
 * @file
 * Code for the DoSomething Campaign Group feature.
 */

include_once 'dosomething_campaign_group.features.inc';


function dosomething_campaign_group_preprocess_node(&$vars) {
  if ($vars['type'] == 'campaign_group') {
    $content = $vars['content'];
    $template_vars = array(
      'text' => array(
        'subtitle',
        'intro_title',
        'intro',
        'additional_text_title',
        'additional_text',
        'signup_form_button_text',
        'post_signup_title',
        'post_signup_body',
        'call_to_action',
      ),
    );

    foreach ($template_vars as $key => $labels) {
      foreach ($labels as $label) {
        $field = "field_{$label}";
          if (isset($content[$field])) {
          switch ($key) {
            case 'text':
              $vars[$label] = $content[$field][0]['#markup'];
              break;
            default:
              break;
          }
        }
      }
    }

    // Hero Images.
    dosomething_helpers_preprocess_hero_images($vars);

    $wrapper = entity_metadata_wrapper('node', $vars['node']);
    if ($wrapper->field_video->value()->field_video_id) {
      $vars['intro_video'] = theme('dosomething_video_embed', array('field' => $wrapper->field_video->value()));
    }

    // Collect all field_collection values as vars.
    $field_collections = array('faq');
    foreach ($field_collections as $fc) {
      $vars[$fc] = dosomething_helpers_get_field_collection_values($wrapper, 'field_' . $fc);
    }

    if (!empty($vars['field_partners'])) {
      // Sets partners, sponsors, and partner_info arrays if present.
      dosomething_helpers_preprocess_partners_vars($vars);
    }

    // Preprocess gallery variables.
    dosomething_static_content_preprocess_gallery_vars($vars);

    $vars['display_signup_form'] = $vars['field_display_signup_form'][0]['value'];
    if ($vars['display_signup_form']) {
      // Set default in case Signup Form Button label is not set.
      $label = NULL;
      if (isset($vars['signup_form_button_text'])) {
        $label = $vars['signup_form_button_text'];
      }
      dosomething_signup_preprocess_signup_button($vars, $label);
    }
  }

  $vars['modals'] = theme('modal_links', array('modals' =>
      array(
        'faq' => $vars['faq'],
        'partner_info' => $vars['partner_info'],
      )
    )
  );
}

/**
 * Returns a Campaign Group parent nid for a given node $nid.
 *
 */
function dosomething_campaign_group_get_parent_nid($nid) {
  $result = db_select('field_data_field_campaigns', 'c')
    ->condition('field_campaigns_target_id', $nid)
    ->condition('deleted', 0)
    ->fields('c', array('entity_id'))
    ->execute();
  return $result->fetchField(0);
}

