<?php
/**
 * @file
 * Code for the DoSomething Campaign Group feature.
 */

include_once 'dosomething_campaign_group.features.inc';


function dosomething_campaign_group_preprocess_node(&$vars) {
  if ($vars['type'] == 'campaign_group') {
    $content = $vars['content'];
    $template_vars = array(
      'text' => array(
        'subtitle',
        'intro_title',
        'intro',
        'signup_form_button_text',
        'call_to_action',
      ),
    );

    $vars['campaigns'] = dosomething_campaign_group_get_campaigns($vars['node']);

    // If there are no published campaigns show add'l text and remove campaigns from vars
    if (!isset($vars['campaigns']['published'])) {
      $template_vars['text'][] = 'additional_text';
      $template_vars['text'][] = 'additional_text_title';
      unset($vars['campaigns']);
    }

    $sid = dosomething_signup_exists($vars['node']->nid);
    if (isset($sid)) {
      $template_vars['text'][] = 'post_signup_title';
      $template_vars['text'][] = 'post_signup_body';
    }

    foreach ($template_vars as $key => $labels) {
      foreach ($labels as $label) {
        $field = "field_{$label}";
          if (isset($content[$field])) {
          switch ($key) {
            case 'text':
              $vars[$label] = $content[$field][0]['#markup'];
              break;
            default:
              break;
          }
        }
      }
    }

    // Hero Images.
    dosomething_helpers_preprocess_hero_images($vars);

    // Add inline css based on vars.
    dosomething_helpers_add_inline_css($vars);

    $wrapper = entity_metadata_wrapper('node', $vars['node']);
    if ($wrapper->field_video->value()->field_video_id) {
      $vars['intro_video'] = theme('dosomething_video_embed', array('field' => $wrapper->field_video->value()));
    }

    $scholarship = $wrapper->field_scholarship_amount->value();
    if (isset($scholarship)) {
      $vars['scholarship'] = '$' . number_format($scholarship, 0, '', ',') . ' Scholarship';
    }

    // Collect all field_collection values as vars.
    $field_collections = array('faq');
    foreach ($field_collections as $fc) {
      $vars[$fc] = dosomething_helpers_get_field_collection_values($wrapper, 'field_' . $fc);
    }

    if (!empty($vars['field_partners'])) {
      // Sets partners, sponsors, and partner_info arrays if present.
      dosomething_helpers_preprocess_partners_vars($vars);
    }

    // Preprocess gallery variables.
    dosomething_static_content_preprocess_gallery_vars($vars);

    if (empty($sid)) {
      $vars['display_signup_form'] = $vars['field_display_signup_form'][0]['value'];
      if ($vars['display_signup_form']) {
        // Set default in case Signup Form Button label is not set.
        $label = NULL;
        if (isset($vars['signup_form_button_text'])) {
          $label = $vars['signup_form_button_text'];
        }
        dosomething_signup_preprocess_signup_button($vars, $label);
      }
    }

    $vars['modals'] = theme('modal_links', array('modals' =>
        array(
          'faq' => $vars['faq'],
          'partner_info' => $vars['partner_info'],
        )
      )
    );
  }
}

/**
 * Implements hook_node_view().
 */
function dosomething_campaign_group_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'campaign_group' && $view_mode == 'full') {
    // Add Zendesk form variable:
    if (module_exists('dosomething_zendesk')) {
      $node->content['zendesk_form'] = drupal_get_form('dosomething_zendesk_form', $node);
    }
  }
}

/**
 * Returns a Campaign Group parent nid for a given node $nid.
 *
 */
function dosomething_campaign_group_get_parent_nid($nid) {
  $result = db_select('field_data_field_campaigns', 'c')
    ->condition('field_campaigns_target_id', $nid)
    ->condition('deleted', 0)
    ->fields('c', array('entity_id'))
    ->execute();
  return $result->fetchField(0);
}

/**
 * Returns an array with title, cta, and image for published and unpublished campaigns.
 *
 */
function dosomething_campaign_group_get_campaigns($campaign_group_node) {
  $campaigns = array();
  if (isset($campaign_group_node->field_campaigns)) {
    foreach ($campaign_group_node->field_campaigns[LANGUAGE_NONE] as $campaign_field) {
      if (isset($campaign_field['entity']->field_image_campaign_cover[LANGUAGE_NONE][0]['target_id'])) {
        $image = dosomething_image_get_themed_image($campaign_field['entity']->field_image_campaign_cover[LANGUAGE_NONE][0]['target_id'], 'square', '300x300');
      }
      $campaign = array(
        'title' => $campaign_field['entity']->title,
        'call_to_action' => $campaign_field['entity']->field_call_to_action[LANGUAGE_NONE][0]['value'],
        'image' => $image,
      );

      if ($campaign_field['entity']->status == 1) {
        $campaign['image'] = l($image, drupal_get_path_alias('node/' . $campaign_field['entity']->nid), array('html' => TRUE));
        $campaigns['published'][] = $campaign;
      }
      else {
        $campaigns['unpublished'][] = $campaign;
      }
    }
  }
  return $campaigns;
}


/**
 * Implements hook_form_alter().
 */
function dosomething_campaign_group_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'campaign_group_node_form') {
    // Add extra non-field form elements.
    dosomething_helpers_form_extras($form, $form_state);
  }
}

