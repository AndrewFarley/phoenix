<?php
/**
 * @file
 * Code for the dosomething_shipment feature.
 */

include_once 'dosomething_shipment.features.inc';
include_once 'dosomething_shipment.forms.inc';

DEFINE('DOSOMETHING_SHIPMENT_LOG', variable_get('dosomething_shipment_log') ? TRUE : FALSE);

/**
 * Implements hook_entity_info().
 */
function dosomething_shipment_entity_info() {
  $info = array();
  $info['shipment'] = array(
    'label' => t('Shipment'),
    'base table' => 'dosomething_shipment',
    'entity keys' => array(
      'id' => 'id',
      'label' => 'id',
    ),
    'entity class' => 'ShipmentEntity',
    'uri callback' => 'entity_class_uri',
    'controller class' => 'ShipmentEntityController',
    'module' => 'dosomething_shipment',
  );
  return $info;
}

/**
 * Implements hook_menu().
 */
function dosomething_shipment_menu() {
  $items = array();
  $items['admin/config/dosomething/dosomething_shipment'] = array(
    'title' => 'DoSomething Shipment',
    'description' => 'Admin configuration form for DoSomething Shipment.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dosomething_shipment_admin_config_form'),
    'access callback' => 'user_access',
    'access arguments' => array('edit campaign overrides'), // All US admins & editors have this, but regional admins do not
    'file' => 'dosomething_shipment.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_views_data().
 */
function dosomething_shipment_views_data() {
  // Define dosomething_shipment table.
  $data['dosomething_shipment']['table']['group'] = t('Shipments');
  $data['dosomething_shipment']['table']['base'] = array(
    'field' => 'id',
    'title' => t('Shipments'),
    'help' => t('Dosomething Shipment table.'),
    'weight' => -10,
  );
  $data['dosomething_shipment']['table']['join'] = array(
    'users' => array(
      'left_field' => 'uid',
      'field' => 'uid',
    ),
  );
  $data['dosomething_shipment']['id'] = array(
    'title' => t('Shipment id'),
    'help' => t('Shipment id.'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'relationship' => array(
      'base' => 'dosomething_shipment',
      'handler' => 'views_handler_relationship',
      'label' => t('Shipment id'),
    ),
  );
  $data['dosomething_shipment']['uid'] = array(
    'title' => t('Uid'),
    'help' => t('User id.'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'relationship' => array(
      'base' => 'users',
      'handler' => 'views_handler_relationship',
      'label' => t('Shipment User'),
    ),
  );
  $data['dosomething_shipment']['entity_type'] = array(
    'title' => t('Shipment Entity type'),
    'help' => t('The type of the Entity associated with the Shipment.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
  );
  $data['dosomething_shipment']['entity_id'] = array(
    'title' => t('Shipment Entity id'),
    'help' => t('The id of the Entity associated with the Shipment.'),
    'field' => array(
      'handler' => 'views_handler_field_numeric',
      'click sortable' => TRUE,
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_numeric',
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
  );
  $data['dosomething_shipment']['created'] = array(
    'title' => t('Date created'),
    'help' => t('Date created.'),
    'field' => array(
      'handler' => 'views_handler_field_date',
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort_date',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_date',
    ),
  );
  $data['dosomething_shipment']['item'] = array(
    'title' => t('Shipment item'),
    'help' => t('Shipment item'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
  );
  $data['dosomething_shipment']['item_option'] = array(
    'title' => t('Shipment item option'),
    'help' => t('Shipment item option, if applicable.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
  );
  $data['dosomething_shipment']['item_additional'] = array(
    'title' => t('Shipment additional item'),
    'help' => t('Shipment additional item, if applicable.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
  );
  $data['dosomething_shipment']['item_additional_option'] = array(
    'title' => t('Shipment item option'),
    'help' => t('Shipment additional item size, if applicable.'),
    'field' => array(
      'handler' => 'views_handler_field',
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_string',
    ),
    'argument' => array(
      'handler' => 'views_handler_argument_string',
    ),
  );
  return $data;
}

/**
 * Returns Shipment for given Entity type and id.
 *
 * @param string $type
 *   The Entity type.
 * @param int $id
 *   The Entity id.
 *
 * @return
 *   The Shipment object, or FALSE.
 */
function dosomething_shipment_get_shipment_id_by_entity($type, $id) {
  $result = db_select('dosomething_shipment', 's')
    ->condition('entity_id', $id)
    ->condition('entity_type', $type)
    ->fields('s', array('id'))
    ->execute();
  $id = $result->fetchField(0);
  // If an id was found, return the Reward.
  if (is_numeric($id)) {
    return entity_load_single('shipment', $id);
  }
  return FALSE;
}

/**
 * Returns array of valid values for a Shipment's item / additional_item.
 */
function dosomething_shipment_get_item_options() {
  $options = array();
  $options['banner'] = t('Banner');
  $options['coupon'] =  t('Coupon');
  $options['tattoo'] = t('Tattoo');
  $options['thumb_socks'] =  t('Thumb Socks');
  $options['action_kit'] =  t('Action Kit');
  return $options;
}
