<?php

/**
 * Populates Terms Service and Privacy Policy node variables.
 */
function dosomething_user_update_7001() {
  variable_set('dosomething_user_node_terms_service', 1049);
  variable_set('dosomething_user_node_privacy_policy', 1050);
  variable_set('dosomething_user_login_form_display_password_link', TRUE);
}

/**
 * Populates Profile variables.
 */
function dosomething_user_update_7002() {
  // Profile subtitle.
  $copy = "Rock your campaigns and send pics to prove it.";
  variable_set('dosomething_user_profile_subtitle', $copy);
}

/**
 * Sets dosomething_user_address_administrative_area_options() for US site.
 */
function dosomething_user_update_7003() {
  if (!dosomething_settings_is_affiliate()) {
    dosomething_user_set_address_administrative_area_options();
  }
}

/**
 * Sets dosomething_user_address_country variable for US site.
 */
function dosomething_user_update_7004() {
  if (!dosomething_settings_is_affiliate()) {
    variable_set('dosomething_user_address_country', 'US');
  }
}

/**
 * Updates dosomething_user_address_administrative_area_options() for US site.
 *
 * New variable is an array, including title ("State").
 */
function dosomething_user_update_7005() {
  if (!dosomething_settings_is_affiliate()) {
    dosomething_user_set_address_administrative_area_options();
  }
}

/**
 * Cancels temporary users accounts at the affiliate sites.
 */
function dosomething_user_update_7006(&$sandbox) {
  if (!dosomething_settings_is_affiliate()) {
    return t('Done');
  }

  // Find users…
  $query = db_select('users', 'u')->fields('u', array('uid'));

 // …registered before the international release (2014-09-03 23:00:00 UTC)…
 $date = new DateTime('2014-09-03T23:00:00Z');
 $where = db_or()
 ->condition(
   'u.created',
   $date->getTimestamp(),
   '<'
 );
 $query->condition($where);

 // …and that are not staff…
 $staff_roles = array(
   user_role_load_by_name('administrator')->rid,
   user_role_load_by_name('editor')->rid,
 );
 $query->leftJoin('users_roles', 'r', 'r.uid = u.uid');
 $where = db_or()
 ->condition('r.rid', $staff_roles, 'not IN')
 // …or don't have any role assigned…
 ->isNull('r.uid', NULL);
 $query->condition($where);
 // …and not the anonymous.
 $query->condition('u.uid', 0, '<>');

  if (!isset($sandbox['total'])) {
    $sandbox['current'] = 0;
    $sandbox['total'] = $query->countQuery()->execute()->fetchField();
  }

  if (!$sandbox['total']) {
    return;
  }

  // There are more than on and a half million users, we better keep it easy.
  $batch_size = 50;
  $users = $query->range(0, $batch_size)->execute()->fetchAllKeyed(0, 0);
  $count = count($users);

  // Delete a batch of users.
  if ($count > 0) {
    user_delete_multiple(array_keys($users));
  }

  // Track progress.
  $sandbox['current'] += $count;

  // Sandbox #finished must be 1 when batch is finished.
  $sandbox['#finished'] = ($sandbox['current'] / $sandbox['total']);

  // Set status message on success.
  if ($sandbox['#finished'] === 1) {
    return t('Cancelled %count user accounts.', array('%count' => $sandbox['total']));
  }
}

/**
 * Implements hook_uninstall().
 */
function dosomething_user_uninstall() {
  // This list is alphabetical, please keep it that way!
  $vars = array(
    'dosomething_user_address_administrative_area_options',
    'dosomething_user_address_country',
    'dosomething_user_enable_clean_slate',
    'dosomething_user_login_form_copy',
    'dosomething_user_login_form_display_password_link',
    'dosomething_user_member_count',
    'dosomething_user_node_privacy_policy',
    'dosomething_user_node_terms_service',
    'dosomething_user_profile_subtitle',
    'dosomething_user_register_form_display_last_name',
    'dosomething_user_register_form_display_opt_in_email',
    'dosomething_user_register_form_display_opt_in_sms',
    'dosomething_user_register_form_display_postal_code',
    'dosomething_user_ups_access_license_number',
    'dosomething_user_ups_password',
    'dosomething_user_ups_test_integration',
    'dosomething_user_ups_username',
  );
  foreach ($vars as $var) {
    variable_del($var);
  }
}
